name: Publish

on: [push]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macOS-10.15, windows-latest]

    steps:
      - uses: actions/checkout@v4
      
      - name: Version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION=$(echo $GITHUB_REF | sed -E 's/[^0-9]//g')
          PLACEHOLDER="0\+develop"
          VERSION_FILE='idi/__init__.py'
          sed -E -i'.original' -e "s/(__version__ ?=.*)$PLACEHOLDER/\1$VERSION/g" "$VERSION_FILE"
          cat "$VERSION_FILE"
        shell: bash
        
      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==1.10.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
           CIBW_REPAIR_WHEEL_COMMAND_MACOS: ""
           CIBW_REPAIR_WHEEL_COMMAND_LINUX: ""
           CIBW_ARCHS: "auto64"
           CIBW_BUILD_VERBOSITY: 1
           #CIBW_SKIP: pp*
           CIBW_BUILD: cp37-* cp38-* cp39-*

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./wheelhouse/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        
      - name: Version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION=$(echo $GITHUB_REF | sed -E 's/[^0-9]//g')
          PLACEHOLDER="0\+develop"
          VERSION_FILE='idi/__init__.py'
          sed -E -i'.original' -e "s/(__version__ ?=.*)$PLACEHOLDER/\1$VERSION/g" "$VERSION_FILE"
          cat "$VERSION_FILE"
        shell: bash
        
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.9'
          
      - name: Install numpy, tomli, and cython
        run:  python -m pip install numpy cython tomli

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz
          
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload_pypi:
    needs: [build_sdist]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist
      - run: ls -R dist
      - run: rm -f dist/*.whl

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          #password: ${{ secrets.TEST_PYPI_TOKEN }}
          #repository_url: https://test.pypi.org/legacy/
          password: ${{ secrets.PYPI_TOKEN }}
    
    
  build_conda:
    name: Upload to Anaconda
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macOS-10.15, windows-latest]
    defaults:
      run:
        shell: bash -l {0}
    needs: [build_wheels]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      - name: Version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION=$(echo $GITHUB_REF | sed -E 's/[^0-9]//g')
          PLACEHOLDER="0\+develop"
          VERSION_FILE='idi/__init__.py'
          sed -E -i'.original' -e "s/(__version__ ?=.*)$PLACEHOLDER/\1$VERSION/g" "$VERSION_FILE"
          cat "$VERSION_FILE"
        shell: bash
        
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Setup Python
        uses: actions/setup-python@v5
        with: 
           python-version: '3.9'     
      
      - name: Setup conda  
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: "build"
          python-version: '3.9'
      
      - run: conda install anaconda-client conda-build -y

      - run: ls -R dist
      
      - name: Build packages
        run: |
          conda install anaconda-client conda-build -y 
          python .github/conda/wheel2conda.py dist/artifact
          
      - run: ls -R dist
      
      - name: Upload
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: anaconda upload dist/artifact/output/*.tar.bz2 --force

